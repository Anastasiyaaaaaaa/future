{"version":3,"sources":["Components/SelectionButtons/SelectionButtons.js","Components/MainContent/Table /TableContent/TableContent.js","Components/MainContent/Table /OnRowSelectInfo/OnRowSelectInfo.js","Components/MainContent/Table /TableFilter/TableFilter.js","Components/MainContent/Table /AddTableRow/Form/Form.js","Components/MainContent/Table /Table.js","Components/MainContent/MainContent.js","Components/Loading/Loading.js","App.js","serviceWorker.js","index.js"],"names":["props","className","onClick","onSelect","onSort","sortField","sortSymbol","data","map","item","key","id","phone","onRowSelect","bind","firstName","lastName","email","row","defaultValue","description","address","streetAddress","city","state","zip","useState","value","setValue","onSearch","type","onChange","event","target","Form","handleClick","setState","onButtonClick","handleClickCancel","onButtonActive","handleChange","handleSubmit","name","this","user","addRow","preventDefault","onSubmit","required","pattern","placeholder","disabled","isDisabled","React","Component","Table","onSortHandler","sortColumn","cloneData","concat","sortType","sort","a","b","asc","directionSymbol","e","newCurrentPage","Number","innerHTML","currentPage","searchHandler","search","addedRow","newRow","unshift","pageSize","symbol","filter","toLowerCase","includes","indexOfLastData","indexOfFirstData","filteredData","getFilteredData","numberOfPages","Math","ceil","length","currentData","slice","pages","i","push","TableContent","n","MainContent","totalRowsCount","App","SelectionButtonsHandler","url","isButtonSelected","isLoading","error","fetchData","fetch","method","headers","then","res","json","result","Loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.df940afb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SelectionButtons.css\";\nexport default (props) => {\n  const smallUrl = `http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`;\n  const bigUrl   = `http://www.filltext.com/?rows=901&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`;\n\n  return (\n    <div className=\"userChoise\">\n      <div className=\"info\"> Выберите набор данных: </div>\n      <div className=\"mainButtons\">\n        <button\n          onClick={() => props.onSelect(smallUrl)}\n          className=\"btn btn-outline-warning\"\n        >\n          Маленький\n        </button>\n        <button\n          onClick={() => props.onSelect(bigUrl)}\n          className=\"btn btn-outline-info\"\n        >\n           Большой\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => (\n  <div>\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th onClick={() => props.onSort(\"id\")}>\n            ID\n            {props.sortField === \"id\" ? (\n              <small>{props.sortSymbol}</small>\n            ) : null}\n          </th>\n          <th onClick={() => props.onSort(\"firstName\")}>\n            First Name\n            {props.sortField === \"firstName\" ? (\n              <small>{props.sortSymbol}</small>\n            ) : null}\n          </th>\n          <th onClick={() => props.onSort(\"lastName\")}>\n            Last Name\n            {props.sortField === \"lastName\" ? (\n              <small>{props.sortSymbol}</small>\n            ) : null}\n          </th>\n          <th onClick={() => props.onSort(\"email\")}>\n            E-mail\n            {props.sortField === \"email\" ? (\n              <small>{props.sortSymbol}</small>\n            ) : null}\n          </th>\n          <th onClick={() => props.onSort(\"phone\")}>\n            Phone\n            {props.sortField === \"phone\" ? (\n              <small>{props.sortSymbol}</small>\n            ) : null}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.data.map((item) => (\n          <tr key={item.id + item.phone} onClick={props.onRowSelect.bind(null, item)}>\n            <td>{item.id}</td>\n            <td>{item.firstName}</td>\n            <td>{item.lastName}</td>\n            <td>{item.email}</td>\n            <td>{item.phone}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","import React from 'react';\nimport './OnRowSelectInfo.css'\nexport default ({row}) => (\n  <div className=\"onRowSelectInfo\">\n    <p>Выбран пользователь <b>{row.firstName + ' ' + row.lastName}</b></p>\n    <p>\n    Описание: <br />\n    <textarea defaultValue={row.description} />\n    </p>\n\n    <p>Адрес проживания: <b>{row.address.streetAddress}</b></p>\n    <p>Город: <b>{row.address.city}</b></p>\n    <p>Провинция/штат: <b>{row.address.state}</b></p>\n    <p>Индекс: <b>{row.address.zip}</b></p>\n\n  </div>\n)","import React, { useState } from \"react\";\nimport \"./TableFilter.css\";\nexport default (props) => {\n  const [value, setValue] = useState(\"\");\n  const valueChangeHandler = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"tableFilter\">\n      <div className=\"input-group \">\n        <div className=\"input-group-prepend\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => props.onSearch(value)}\n          >\n            Найти\n          </button>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          onChange={valueChangeHandler}\n          value={value}\n        />{\" \"}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Form.css\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n\n      onButtonClick: false,\n      onButtonActive: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    let user = {\n      id: this.state.id,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone,\n      address: {\n        streetAddress: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n      },\n      description: \"Это новый пользователь!\",\n    };\n\n    this.props.addRow(user);\n\n    this.setState({\n      onButtonClick: false,\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n    event.preventDefault();\n  }\n\n  handleClick = () => {\n    this.setState({ onButtonClick: true });\n  };\n  handleClickCancel = () => {\n    this.setState({\n      onButtonClick: false,\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n  };\n\n  isDisabled() {\n    const { id, firstName, lastName, email, phone } = this.state;\n\n    /* нужно добавить проверку на уже существующий key */\n\n    if (\n      id === \"\" ||\n      firstName === \"\" ||\n      lastName === \"\" ||\n      email === \"\" ||\n      phone === \"\"\n    ) {\n      return true;\n    } else return false;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.onButtonClick === false ? (\n          <button onClick={this.handleClick} className=\"btn btn-success\">\n            Добавить запись\n          </button>\n        ) : (\n          <div>\n            <form className=\"card mx-xl-5\" onSubmit={this.handleSubmit}>\n              <label>Введите данные: </label>\n              <label>\n                id:\n                <input\n                  required\n                  name=\"id\"\n                  type=\"id\"\n                  pattern=\"^[ 0-9]+$\"\n                  placeholder=\"12\"\n                  value={this.state.id}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label>\n                firstName:\n                <input\n                  required\n                  name=\"firstName\"\n                  type=\"text\"\n                  pattern=\"^[a-zA-Z]+$\" \n                  placeholder=\"Louis\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label>\n                lastName:\n                <input\n                  required\n                  name=\"lastName\"\n                  type=\"text\"\n                  pattern=\"^[a-zA-Z]+$\"\n                  placeholder=\"Gunter\"\n                  value={this.state.lastName}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label>\n                email:\n                <input\n                  required\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"example@mail.com\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label>\n                phone:\n                <input\n                  required\n                  name=\"phone\"\n                  type=\"tel\"\n                  placeholder=\"(888)888-8888\" \n                  pattern=\"\\([0-9]{3}\\)[0-9]{3}-[0-9]{4}\"\n                  value={this.state.phone}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <input\n                disabled={this.isDisabled()}\n                type=\"submit\"\n                value=\"Добавить в таблицу\"\n                className=\"btn btn-outline-success\"\n              />\n              <button onClick={this.handleClickCancel} className=\"btn btn-info\">\n                Oтмена\n              </button>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./Table.css\";\nimport TableContent from \"./TableContent/TableContent\";\nimport OnRowSelectInfo from \"./OnRowSelectInfo/OnRowSelectInfo\";\nimport TableFilter from \"./TableFilter/TableFilter\"; \nimport Form from \"./AddTableRow/Form/Form\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n\n      /* пагинация */\n      currentPage: this.props.currentPage,\n      pageSize: this.props.pageSize,\n\n      /* сортировка */\n      sortColumn: \"\",\n      sort: \"asc\",\n      directionSymbol: {\n        symbol: \"asc\",\n      },\n\n      /* выбранная строка */\n      row: null,\n\n      /* поиск */\n      search: \"\",\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  /* выбранная строка */\n  onRowSelect = (row) => {\n    this.setState({ row });\n  };\n\n  /* сортировка */\n  onSortHandler = (sortColumn) => {\n    const cloneData = this.state.data.concat();\n    const sortType = this.state.sort === \"asc\" ? \"desc\" : \"asc\";\n\n    this.setState({\n      data: cloneData.sort((a, b) => {\n        const asc = sortType === \"asc\";\n\n        if (a[sortColumn] < b[sortColumn]) {\n          return asc ? -1 : 1;\n        } else if (a[sortColumn] > b[sortColumn]) {\n          return asc ? 1 : -1;\n        } else {\n          return 0;\n        }\n      }),\n      directionSymbol: {\n        [sortColumn]:\n          this.state.directionSymbol[sortColumn] === \"asc\" ? \"desc\" : \"asc\",\n      },\n\n      sortColumn,\n      sort: sortType,\n    });\n  };\n\n  /* пагинация */\n  handleClick = (e) => {\n    let newCurrentPage = Number(e.target.innerHTML);\n    this.setState({ currentPage: newCurrentPage });\n  };\n\n  /* фильтрация */\n  searchHandler = (search) => this.setState({ search, currentPage: 1 });\n  getFilteredData() {\n    const { data, search } = this.state;\n    const cloneData = data.concat();\n    if (!search) {\n      return cloneData;\n    }\n    return cloneData.filter((item) => {\n      return (\n        item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase())\n      );\n    });\n  }\n\n  /* добавление строки */\n  addedRow = (newRow) => {\n    const data = this.state.data.concat();\n    data.unshift(newRow);\n    this.setState({ data });\n  };\n\n  render() {\n    const { currentPage, pageSize } = this.state;\n\n    const indexOfLastData = currentPage * pageSize;\n    const indexOfFirstData = indexOfLastData - pageSize;\n    const filteredData = this.getFilteredData();\n\n    let numberOfPages = Math.ceil(filteredData.length / pageSize);\n\n    const currentData = filteredData.slice(indexOfFirstData, indexOfLastData); //отображаем только 50 строк\n\n    let pages = [];\n    for (let i = 1; i <= numberOfPages; i++) {\n      pages.push(i);\n    }\n\n    return (\n      <div>\n        <div className=\"topFunctions\">\n          <TableFilter onSearch={this.searchHandler} />          \n          <Form addRow={this.addedRow} />\n        </div>\n\n        {currentData.length === 0 ? (\n          <div className=\"noSearchResults\">\n            {\" \"}\n            Ничего не найдено. <br /> Введите новый текст для поиска или удалите\n            предыдущий :){\" \"}\n          </div>\n        ) : (\n          <TableContent\n            data={currentData}\n            onSort={this.onSortHandler}\n            sortSymbol={this.state.sort}\n            sortField={this.state.sortColumn}\n            onRowSelect={this.onRowSelect}\n          />\n        )}\n\n        <div className=\"paginator\">\n          {numberOfPages > 1\n            ? pages.map((n) => (\n                <span\n                  key={n}\n                  className={\n                    this.state.currentPage === n\n                      ? \"selectedPage\"\n                      : \"notSelectedPage\"\n                  }\n                  onClick={this.handleClick}\n                >\n                  {n}{\" \"}\n                </span>\n              ))\n            : null}\n        </div>\n        {this.state.row ? (\n          currentData.length !== 0 ? (\n            <OnRowSelectInfo row={this.state.row} />\n          ) : null\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport \"./MainContent.css\";\nimport Table from \"./Table /Table\";\n\nclass MainContent extends React.Component {\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <Table\n          data={this.props.data}\n          totalRowsCount={this.props.totalRowsCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainContent;\n","import React from \"react\";\nimport \"./Loader.css\";\n\nexport default () => (\n  <div className=\"Loader\">\n    <div className=\"lds-heart\">\n      <div></div>\n    </div>\n    <div className=\"LoaderText\">Загрузка данных...</div>\n  </div>\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport SelectionButtons from \"./Components/SelectionButtons/SelectionButtons\";\nimport MainContent from \"./Components/MainContent/MainContent\";\nimport Loading from \"./Components/Loading/Loading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isButtonSelected: false,\n      data: [],\n      isLoading: false,\n      error: null,\n\n      pageSize: 50,\n      currentPage: 1,\n    };\n  }\n\n  async fetchData(url) {\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoading: false,\n            data: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoading: true,\n            error,\n          });\n        }\n      );\n  }\n\n  SelectionButtonsHandler = (url) => {\n    /* показываем индикатор загрузки\n       и передаем url */\n    this.setState({\n      isButtonSelected: true,\n      isLoading: true,\n      error: false\n    });\n    this.fetchData(url);\n  };\n\n  render() {\n    // if (this.state.error) {\n    //   return <p> Произошла ошибка во время загрузки данных :(  </p>;\n    // } else\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SelectionButtons onSelect={this.SelectionButtonsHandler} />\n        </header>\n        {this.state.isButtonSelected ? (\n          this.state.error ? (\n            <p> Произошла ошибка во время загрузки данных :( </p>\n          ) : this.state.isLoading ? (\n            <Loading />\n          ) : (\n            <MainContent\n              data={this.state.data}\n              pageSize={this.state.pageSize}\n              currentPage={this.state.currentPage}\n            />\n          )\n        ) : (\n          <div className=\"startPage\"></div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}